# docker-compose.yml
#version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hr_postgres
    environment:
      POSTGRES_USER: hruser
      POSTGRES_PASSWORD: hrpassword
      POSTGRES_DB: hrdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hr_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hruser -d hrdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hr_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://hruser:hrpassword@postgres:5432/hrdb
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - hr_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: nginx:alpine
    container_name: hr_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - hr_network

volumes:
  postgres_data:

networks:
  hr_network:
    driver: bridge